// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "./generated/client"
  // was close
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model post {
  id         Int       @id @default(autoincrement())
  title      String
  subtitle   String?
  content    String?
  slug       String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  imageUrl   String?
  published  Boolean   @default(false)
  views      Int       @default(0)
  authorId   Int
  author     user      @relation(fields: [authorId], references: [id])
  categoryId Int
  category   category  @relation(fields: [categoryId], references: [id])
  comments   comment[]
}

model user {
  id         Int       @id @default(autoincrement())
  firstName  String
  lastName   String
  username   String?   @unique
  imageUrl   String?   @default("https://cdn-icons-png.flaticon.com/512/219/219969.png")
  email      String    @unique
  password   String
  bioProfile String?   @default("This user has no bio")
  role       String    @default("user")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  posts      post[]
  comments   comment[]
}

model category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     post[]
}

model comment {
  id        Int      @id @default(autoincrement())
  content   String // The content of the comment
  createdAt DateTime @default(now()) // Timestamp for when the comment was created
  updatedAt DateTime @updatedAt // Timestamp for when the comment was last updated
  postId    Int // Foreign key to the post
  post      post     @relation(fields: [postId], references: [id]) // Relation to the post model
  userId    Int // Foreign key to the user who made the comment
  user      user     @relation(fields: [userId], references: [id]) // Relation to the user model
}
